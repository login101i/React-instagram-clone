[{"C:\\Users\\dell\\instagram-clone\\src\\index.js":"1","C:\\Users\\dell\\instagram-clone\\src\\App.js":"2","C:\\Users\\dell\\instagram-clone\\src\\firebase.js":"3","C:\\Users\\dell\\instagram-clone\\src\\components\\Post.js":"4","C:\\Users\\dell\\instagram-clone\\src\\components\\ImageUpload.js":"5","C:\\Users\\dell\\instagram-clone\\src\\components\\MenuPopupState.js":"6"},{"size":219,"mtime":1608385928649,"results":"7","hashOfConfig":"8"},{"size":7408,"mtime":1608558993521,"results":"9","hashOfConfig":"8"},{"size":562,"mtime":1608391126657,"results":"10","hashOfConfig":"8"},{"size":2921,"mtime":1608430219794,"results":"11","hashOfConfig":"8"},{"size":2765,"mtime":1608413637510,"results":"12","hashOfConfig":"8"},{"size":2025,"mtime":1608575685130,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1zfbxs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dell\\instagram-clone\\src\\index.js",[],["29","30"],"C:\\Users\\dell\\instagram-clone\\src\\App.js",["31","32","33","34"],"import React, { useState, useEffect } from 'react'\nimport { Button, Input, Modal } from '@material-ui/core';\n\n\n\nimport './App.css';\nimport Post from './components/Post'\nimport { auth, db } from './firebase'\nimport ImageUpload from './components/ImageUpload';\nimport InstagramEmbed from 'react-instagram-embed';\nimport MenuPopupState from './components/MenuPopupState'\nimport getUserLocale from 'get-user-locale'\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}`,\n    left: `${left}`,\n    transform: `translate(-${top}%,-${top}%)`\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    top: \"50%\",\n    left: '50%',\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: 10,\n  },\n\n})\n);\n\nconst Spinner = () => {\n  <div className=\"post__\">\n    <img src=\"https://i.gifer.com/ZZ5H.gif\" alt=\"Loading\" width=\"20\" />\n    <h5>Loading</h5>\n  </div>\n}\n\nconst locale = () => {\n  if (getUserLocale().includes('pl')) {\n    return (true)\n  } else {\n    return (false)\n  }\n\n}\n\n\n\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const [logged, setLogged] = useState(false)\n  const [openSignIn, setOpenSignIn] = useState(false)\n  const [openSignUp, setOpenSignUp] = useState(false)\n  const [username, setUserName] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const classes = useStyles()\n  const [modalStyle, setModalStyle] = useState(getModalStyle)\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [lang, setLang] = useState(locale);\n\n\n\n\n  const toggleLang = () => setLang(!lang);\n\n\n\n\n\nuseEffect(() => {\n  db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n    setPosts(snapshot.docs.map(doc => ({\n      id: doc.id,\n      post: doc.data()\n    })))\n  })\n}, [])\n\n// ____________________________________________________________________\n\nuseEffect(() => {\n  auth.onAuthStateChanged((authUser) => {\n    if (authUser) {\n      setUser(authUser)\n      console.log(authUser)\n\n      if (authUser.displayName) {\n        // nie uaktualniaj imienia\n      } else {\n        // jeśli stworzyliśmy nowego\n        return authUser.updateProfile({\n          displayName: username\n        })\n      }\n    } else {\n      setUser(null)\n    }\n  })\n}, [user, username])\n\n\n\n\nconst signUp = (event) => {\n  event.preventDefault()\n\n  auth.createUserWithEmailAndPassword(email, password)\n    .then((authUser) => {\n      authUser.user.updateProfile({\n        displayName: username\n      })\n      setOpenSignUp(false)\n    })\n    .catch((error) => alert(error.message))\n}\n\n\nconst signIn = (event) => {\n  event.preventDefault()\n  setOpenSignIn(true)\n  console.log(\"hhihihi\")\n\n  auth\n    .signInWithEmailAndPassword(email, password)\n    .catch((error) => alert(error.message))\n\n  setOpenSignIn(false)\n\n}\n\n\n// ____________________________________________________________________\n\n\n// Rejestracja\nreturn (\n  <div className=\"app\">\n\n    <div className=\"app__header\">\n\n\n      <img\n        className=\"app__headerImage\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/1200px-Instagram_logo.svg.png\" alt=\"\" />\n\n      <div className=\"app__logIn\">\n        {!user ? (<Button onClick={() => setOpenSignIn(true)}>Zaloguj się</Button>)\n          :\n          (<Button onClick={() => auth.signOut()}>Wyloguj się</Button>)}\n\n        <Button Button onClick={() => setOpenSignUp(true)}>Zarejestruj się</Button>\n        <MenuPopupState\n          topmenu={true}\n          lang={lang}\n          user={user}\n          functiontopass={toggleLang}\n          labeltopass={lang ? \"English Version\" : \"Wersja Polska\"}\n          signout={() => auth.signOut()}\n          signoutlabel={lang ? \"Wyloguj\" : \"Logout\"}\n          signin={() => setOpenSignIn(true)}\n          signinlabel={lang ? \"Zaloguj się\" : \"Sign In\"}\n          signup={() => setOpenSignUp(true)}\n          signuplabel={lang ? \"Zarejestruj się\" : \"Sign Up\"}\n\n        />\n      </div>\n    </div>\n\n    {/* Rejestracja */}\n\n    <Modal\n      className={modalStyle}\n      open={openSignUp}\n      onClose={() => setOpenSignUp(false)}\n\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <center>\n          <img\n            className=\"app__headerImage\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/1200px-Instagram_logo.svg.png\" alt=\"\" />\n        </center>\n        <div className=\"app__inputs\">\n          <Input\n            placeholder=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={e => setUserName(e.target.value)}\n          />\n          <Input\n            placeholder=\"email/login\"\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <Input\n            placeholder=\"hasło\"\n            type=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n          <Button onClick={signUp}>Zarejestruj się</Button>\n\n\n        </div>\n\n\n      </div>\n\n\n    </Modal>\n\n    <Modal\n      className={modalStyle}\n      open={openSignIn}\n      onClose={() => setOpenSignIn(false)}\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <center>\n          <img\n            className=\"app__headerImage\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/1200px-Instagram_logo.svg.png\" alt=\"\" />\n        </center>\n        <div className=\"app__inputs\">\n\n          <Input\n            placeholder=\"email/login\"\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <Input\n            placeholder=\"hasło\"\n            type=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n\n          <Button onClick={signIn}>Zaloguj się</Button>\n\n        </div>\n\n\n      </div>\n\n\n    </Modal>\n    {/* Logowanie */}\n\n\n\n    <div className=\"app_posts\">\n\n      <div className=\"app__postsLeft\">\n        {\n          posts.map(({ id, post }) => (\n            <Post\n              user={user}\n              key={post.id}\n              postId={id}\n              username={post.username}\n              caption={post.caption}\n              imageUrl={post.imageUrl}\n\n            />\n          ))\n        }\n      </div>\n\n\n      <div className=\"app__postsRight\">\n\n        <InstagramEmbed\n          url=\"https://instagr.am/p/CAX8psZMEdL_Lkto_rA_8oIhfVE1IJNLUobpkc0/\"\n          maxWidth={320}\n          hideCaption={false}\n          containerTagName=\"div\"\n          protocol=\"\"\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n\n      </div>\n    </div>\n\n\n    <Post\n      username=\"Maciej Kruszyniak\"\n      caption=\"Caption 1\"\n      imageUrl=\"https://www.jetsetter.com/wp-content/uploads/sites/7/2018/04/VUC2Bht0-1380x690.jpeg\" />\n\n\n\n    {user?.displayName ? (\n      <ImageUpload\n        username={user.displayName}\n      />\n    ) : (<h3>Przepraszam, musisz się najpierw zalogować</h3>)}\n\n\n\n\n  </div >\n);\n}\n\nexport default App;\n","C:\\Users\\dell\\instagram-clone\\src\\firebase.js",[],"C:\\Users\\dell\\instagram-clone\\src\\components\\Post.js",["35","36"],"import { Avatar } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport { db } from '../firebase'\r\nimport './post.css'\r\nimport firebase from 'firebase'\r\n\r\nfunction Post({ username, caption, imageUrl, postId, user }) {\r\n    const [comments, setComments] = useState([])\r\n    const [comment, setComment] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if (postId) {\r\n            unsubscribe = db\r\n                .collection(\"posts\")\r\n                .doc(postId)\r\n                .collection(\"123\")\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot((snapshot) => {\r\n                    setComments(snapshot.docs.map((doc) => doc.data()));\r\n                })\r\n        }\r\n        return () => {\r\n            // unsubscribe();\r\n            console.log(comments)\r\n\r\n        };\r\n    }, [postId]);\r\n    console.log(comments)\r\n\r\n\r\n    const postComment = (event) => {\r\n        event.preventDefault()\r\n        db.collection(\"posts\").doc(postId).collection('123').add({\r\n            comment: comment,\r\n            username: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setComment('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__header\">\r\n\r\n                <Avatar\r\n                    className=\"post__avatar\"\r\n                    alt={username}\r\n                    src={imageUrl}\r\n                />\r\n                <h3 className=\"post__username\">{username}</h3>\r\n            </div>\r\n            <img\r\n                className=\"post__image\"\r\n                src={imageUrl} alt=\"\" />\r\n            <h4 className=\"post__text\">{caption} <strong>{username}</strong></h4>\r\n\r\n\r\n            <div className=\"post__comments\">\r\n                {comments.map((comment) => (\r\n                    <p>\r\n                        <strong>{comment.username}</strong>{comment.comment}\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            {user &&\r\n                <form>\r\n                    <div className=\"post__commentBox\">\r\n\r\n                        <input\r\n                            className=\"post__input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Twój komentarz\"\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                        />\r\n\r\n                        <button\r\n                            className=\"post__button\"\r\n                            disabled={!comment}\r\n                            type=\"submit\"\r\n                            onClick={postComment}\r\n                        >\r\n                            Opublikuj\r\n                  </button>\r\n\r\n\r\n                    </div>\r\n                </form>\r\n            }\r\n\r\n\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\dell\\instagram-clone\\src\\components\\ImageUpload.js",[],"C:\\Users\\dell\\instagram-clone\\src\\components\\MenuPopupState.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":48,"column":7,"nodeType":"43","messageId":"44","endLine":48,"endColumn":14},{"ruleId":"41","severity":1,"message":"45","line":69,"column":10,"nodeType":"43","messageId":"44","endLine":69,"endColumn":16},{"ruleId":"41","severity":1,"message":"46","line":69,"column":18,"nodeType":"43","messageId":"44","endLine":69,"endColumn":27},{"ruleId":"41","severity":1,"message":"47","line":75,"column":22,"nodeType":"43","messageId":"44","endLine":75,"endColumn":35},{"ruleId":"41","severity":1,"message":"48","line":16,"column":13,"nodeType":"43","messageId":"44","endLine":16,"endColumn":24},{"ruleId":"49","severity":1,"message":"50","line":30,"column":8,"nodeType":"51","endLine":30,"endColumn":16,"suggestions":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'Spinner' is assigned a value but never used.","Identifier","unusedVar","'logged' is assigned a value but never used.","'setLogged' is assigned a value but never used.","'setModalStyle' is assigned a value but never used.","'unsubscribe' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'comments'. Either include it or remove the dependency array.","ArrayExpression",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [comments, postId]",{"range":"58","text":"59"},[867,875],"[comments, postId]"]